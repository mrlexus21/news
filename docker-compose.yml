version: "3.8"
services:
    app:
        build:
            args:
                user: news
                uid: 1000
            context: .
            dockerfile: ./docker/Dockerfile
        container_name: news-app
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - news
    postgres:
        build:
            context: ./docker/postgres
            dockerfile: Dockerfile
        container_name: news-postgres
        restart: always
        environment:
            POSTGRES_DATABASE: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_HOST_AUTH_METHOD: "trust"
        volumes:
            - ./docker/postgres/data:/var/lib/postgresql/data
        ports:
            - 54321:5432
        networks:
            - news
    nginx:
        image: nginx:alpine
        container_name: news-nginx
        restart: unless-stopped
        ports:
            - 8000:80
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d/
        networks:
            - news
    redis:
        image: redis:5.0.8-alpine
        restart: always
        container_name: news-redis
        ports:
            - 6380:6379
        networks:
            - news
    es:
        image: elasticsearch:7.16.2
        container_name: news-es
        ports:
            - 9200:9200
        environment:
            - discovery.type=single-node
            - cluster.name=laradock-cluster
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
        volumes:
            - ./docker/es:/usr/share/elasticsearch/data
        networks:
            - news

networks:
    news:
        driver: bridge
